import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { initTranslations } from "@/components/i18n";
import TranslationsProvider from "@/components/i18n/TranslationsProvider";
import { ThemeProvider } from "@/components/theme/ThemeProvider";
import { Content, Header, Sidebar, Wrapper } from "@/components/layout";
import type { SidebarItem } from "@/components/layout/Sidebar";
import {
  Home,
  User,
  Settings,
  HelpCircle,
} from "lucide-react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;

  const sidebarItems: SidebarItem[] = [
    {
      name: "Dashboard",
      href: "/dashboard",
      icon: <Home className="h-5 w-5" />,
    },
    {
      name: "Users",
      href: "/users",
      icon: <User className="h-5 w-5" />,
    },
    {
      name: "Settings",
      href: "/settings",
      icon: <Settings className="h-5 w-5" />,
    },
    {
      name: "Help",
      href: "/help",
      icon: <HelpCircle className="h-5 w-5" />,
    },
  ];

  const namespaces = ["common"];

  const { resources } = await initTranslations({
    locale,
    namespaces: namespaces,
  });

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TranslationsProvider locale={locale} namespaces={namespaces} resources={resources}>
          <ThemeProvider>
            <Wrapper>
              <Sidebar sidebarItems={sidebarItems} />
              <Content>
                <Header />
                {children}
              </Content>
            </Wrapper>
          </ThemeProvider>
        </TranslationsProvider>
      </body>
    </html>
  );
}
